name: "CodeQL"

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  schedule:
    - cron: "0 0 * * 0" # Semanalmente, no domingo à meia-noite

jobs:
  analyze:
    name: Analyze
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      actions: read

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
        languages: javascript
        # Explicitamente desabilitar o autobuild para Java/Kotlin se ele estiver sendo detectado
        # e causando problemas, mesmo que o projeto não seja Java/Kotlin.
        # Isso pode ser feito adicionando um arquivo de configuração CodeQL
        # ou garantindo que apenas as linguagens desejadas sejam analisadas.
        # Como o problema persiste, vamos garantir que apenas JavaScript seja analisado.
        # Se o CodeQL ainda tentar analisar Java/Kotlin, pode ser necessário
        # um arquivo de configuração CodeQL mais granular para excluir explicitamente.

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 18 # Use a versão do Node.js compatível com seu projeto

    - name: Install backend dependencies
      run: npm ci || npm install # Instala dependências do backend. `npm ci` para instalações limpas.
      working-directory: backend

    - name: Build backend
      run: npm run build --if-present # Executa o script de build do backend, se existir.
      working-directory: backend

    - name: Install frontend dependencies
      run: npm ci || npm install # Instala dependências do frontend.
      working-directory: frontend

    - name: Build frontend
      run: npm run build --if-present # Executa o script de build do frontend, se existir.
      working-directory: frontend

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2


